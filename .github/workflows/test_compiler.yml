name: Test Lexer

on: [push, pull_request]

jobs:
  test_lexer:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2

    - name: Install dependencies
      run: |
        python -m venv .venv
        source .venv/bin/activate
        pip install -r requirements.txt

    - name: Run test_lexer
      run: |
        source .venv/bin/activate
        python -m unittest tests/test_lexer.py

  test_parser:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2

    - name: Install dependencies
      run: |
        python -m venv .venv
        source .venv/bin/activate
        pip install -r requirements.txt

    - name: Run another test
      run: |
        source .venv/bin/activate
        python -m unittest tests/test_parser.py

  codecoverage:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2

    - name: Install dependencies
      run: |
        python -m venv .venv
        source .venv/bin/activate
        pip install -r requirements.txt
        pytest --cov-branch --cov-report=xml

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}

  upload_combined:
    runs-on: ubuntu-latest
    needs: [test_lexer, test_parser]

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2

    - name: Install dependencies
      run: |
        python -m venv .venv
        source .venv/bin/activate
        pip install -r requirements.txt

    - name: Install TeX Live
      run: |
        sudo apt-get install -y texlive-xetex fonts-freefont-ttf

    - name: Combine the scripts into one
      run: |
        source .venv/bin/activate
        python scripts/combine.py
    

    - name: Create output report directory
      run: mkdir -p out

    - name: Compile the report
      run: |
        xelatex -file-line-error -interaction=nonstopmode -synctex=1 -output-directory=out -shell-escape report/report.tex
        xelatex -file-line-error -interaction=nonstopmode -synctex=1 -output-directory=out -shell-escape report/report.tex

    - name: Move report.pdf to root directory
      run: |
        mv out/report.pdf report.pdf
        mv tests/correct.gr correct.gr
        mv tests/false.gr false.gr
        mv combined_compiler.py compiler.py


    - name: Upload combined_compiler.py
      uses: actions/upload-artifact@v4
      with:
        name: combined_compiler
        path: |
          compiler.py
          report.pdf
          correct.gr
          false.gr